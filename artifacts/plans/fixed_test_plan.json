{
  "profile": "final-blog-25638597_figma_site",
  "url": "https://final-blog-25638597.figma.site",
  "pdf_hash": "4f8ad97d4648",
  "test_scenarios": [
    {
      "id": "TC001",
      "priority": "MUST",
      "scenario": "Responsive layout at 400px breakpoint",
      "steps": [
        {
          "description": "Set viewport to desktop size 1280x900",
          "action": "setViewport",
          "selector": "",
          "params": [[1280, 900]]
        },
        {
          "description": "Open the base URL",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site"]
        },
        {
          "description": "Verify no horizontal scroll appears on desktop layout",
          "action": "expectTrue",
          "selector": "",
          "params": ["document.documentElement.scrollWidth <= window.innerWidth + 1"]
        },
        {
          "description": "Resize viewport to mobile portrait 400x900",
          "action": "setViewport",
          "selector": "",
          "params": [[400, 900]]
        },
        {
          "description": "Check again that no horizontal scroll exists at 400px width",
          "action": "expectTrue",
          "selector": "",
          "params": ["document.documentElement.scrollWidth <= window.innerWidth + 1"]
        },
        {
          "description": "Resize viewport to mobile landscape 640x360",
          "action": "setViewport",
          "selector": "",
          "params": [[640, 360]]
        },
        {
          "description": "Confirm layout stays usable in landscape (no horizontal scroll and header title visible)",
          "action": "expectTrue",
          "selector": "",
          "params": ["document.documentElement.scrollWidth <= window.innerWidth + 1 && !!document.querySelector('header h1')"]
        }
      ],
      "assertion": {
        "description": "Layout adapts without horizontal scroll or clipped content across desktop, portrait, and landscape breakpoints",
        "selector": "",
        "condition": "expectTrue",
        "params": ["document.documentElement.scrollWidth <= window.innerWidth + 1"]
      }
    },
    {
      "id": "TC005",
      "priority": "SHOULD",
      "scenario": "Web Share API integration",
      "steps": [
        {
          "description": "Set viewport to desktop size so the Share button label is visible",
          "action": "setViewport",
          "selector": "",
          "params": [[1280, 900]]
        },
        {
          "description": "Open the base URL",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site"]
        },
        {
          "description": "Stub navigator.share to capture its payload before clicking Share button",
          "action": "evaluate",
          "selector": "",
          "params": ["window.__sharedData = null; navigator.share = async data => { window.__sharedData = data; };"]
        },
        {
          "description": "Click the Share button (공유하기) in the header",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Verify the stub captured the expected title and URL",
          "action": "expectTrue",
          "selector": "",
          "params": ["window.__sharedData && window.__sharedData.title === 'UI Components Test Site' && window.__sharedData.url === window.location.href"]
        }
      ],
      "assertion": {
        "description": "Clicking Share button triggers navigator.share with title and URL when available",
        "selector": "",
        "condition": "expectTrue",
        "params": ["window.__sharedData !== null"]
      }
    },
    {
      "id": "TC006",
      "priority": "MUST",
      "scenario": "Header and sidebar navigation",
      "steps": [
        {
          "description": "Open the home page",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site"]
        },
        {
          "description": "From the home screen cards, click the Browse button (둘러보기) under Basic Features (기본 기능)",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Confirm the page header shows Basic Features text (기본 기능)",
          "action": "expectVisible",
          "selector": "header h1",
          "params": []
        },
        {
          "description": "Use the sidebar button labeled Forms and Feedback (폼과 피드백) to navigate",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Verify the header title updates to Forms and Feedback (폼과 피드백)",
          "action": "expectVisible",
          "selector": "header h1",
          "params": []
        },
        {
          "description": "Click the Back to Home button (홈으로) in the header",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Ensure the home hero heading UI Components Test Site (UI 컴포넌트 테스트 사이트) is visible again",
          "action": "expectVisible",
          "selector": "main",
          "params": []
        }
      ],
      "assertion": {
        "description": "Navigation controls change sections and update page headings correctly",
        "selector": "header h1",
        "condition": "expectVisible",
        "params": []
      }
    },
    {
      "id": "TC008",
      "priority": "MUST",
      "scenario": "Search, filter, and sort list",
      "steps": [
        {
          "description": "Navigate directly to Basic Features page using hash",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site#basics"]
        },
        {
          "description": "Type smartwatch (스마트워치) into the search input field that says Enter search term (검색어를 입력하세요)",
          "action": "fill",
          "selector": "",
          "params": ["스마트워치"]
        },
        {
          "description": "Wait until the result card titled Smartwatch App Recommendations (스마트워치 앱 추천) appears",
          "action": "expectVisible",
          "selector": "div",
          "params": []
        },
        {
          "description": "Click the Sort button (정렬) to switch sorting to by title (제목순)",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Verify the Sort by Title label (정렬: 제목순) updates accordingly",
          "action": "expectVisible",
          "selector": "text",
          "params": []
        }
      ],
      "assertion": {
        "description": "Search results filter and sort toggles respond in the UI",
        "selector": "div",
        "condition": "expectVisible",
        "params": []
      }
    },
    {
      "id": "TC011",
      "priority": "MUST",
      "scenario": "Modal behavior and accessibility",
      "steps": [
        {
          "description": "Navigate to Interactions and Data page using hash",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site#interactions"]
        },
        {
          "description": "Scroll until the card titled Popup Window (팝업 창) is in view",
          "action": "scrollIntoView",
          "selector": "",
          "params": []
        },
        {
          "description": "Click the Open Modal Dialog button (모달 다이얼로그 열기)",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Check that the Modal Dialog heading (모달 다이얼로그) appears inside the dialog",
          "action": "expectVisible",
          "selector": "[role=dialog] h2",
          "params": []
        },
        {
          "description": "Press Escape to dismiss the dialog",
          "action": "press",
          "selector": "body",
          "params": ["Escape"]
        },
        {
          "description": "Confirm the dialog overlay closes",
          "action": "expectHidden",
          "selector": "[role=dialog]",
          "params": []
        }
      ],
      "assertion": {
        "description": "Modal opens from trigger and closes via Escape without lingering overlays",
        "selector": "[role=dialog]",
        "condition": "expectHidden",
        "params": []
      }
    },
    {
      "id": "TC012",
      "priority": "SHOULD",
      "scenario": "Tabs and accordion interactions",
      "steps": [
        {
          "description": "Open Basic Features page via hash",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site#basics"]
        },
        {
          "description": "Select the Analytics tab (분석) in the tab menu",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Ensure the panel showing Analytics Data (분석 데이터) becomes visible",
          "action": "expectVisible",
          "selector": "div",
          "params": []
        },
        {
          "description": "Switch to the Reports tab (보고서)",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Verify Reports content (보고서) is displayed",
          "action": "expectVisible",
          "selector": "div",
          "params": []
        },
        {
          "description": "Expand the accordion item labelled FAQ 1 (자주 묻는 질문 1)",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Confirm the answer text about service usage (서비스 이용 방법) is shown",
          "action": "expectVisible",
          "selector": "div",
          "params": []
        }
      ],
      "assertion": {
        "description": "Tabs change visible panels and accordion item opens with aria-expanded true",
        "selector": "button",
        "condition": "expectAttribute",
        "params": ["aria-expanded", "true"]
      }
    },
    {
      "id": "TC013",
      "priority": "SHOULD",
      "scenario": "Tooltips on hover and focus",
      "steps": [
        {
          "description": "Open Forms and Feedback page via hash",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site#forms"]
        },
        {
          "description": "Scroll until the card titled Tooltip (툴팁) is visible",
          "action": "scrollIntoView",
          "selector": "",
          "params": []
        },
        {
          "description": "Hover the button within the Help tile (도움말) to reveal tooltip",
          "action": "hover",
          "selector": "",
          "params": []
        },
        {
          "description": "Check the tooltip text Click to see help (도움말을 확인하려면 클릭하세요) appears",
          "action": "expectVisible",
          "selector": "[role=tooltip]",
          "params": []
        },
        {
          "description": "Focus the button in the Download tile (다운로드) using Tab navigation",
          "action": "focus",
          "selector": "",
          "params": []
        },
        {
          "description": "Ensure the tooltip describing Download file (파일을 다운로드합니다) is shown on focus",
          "action": "expectVisible",
          "selector": "[role=tooltip]",
          "params": []
        }
      ],
      "assertion": {
        "description": "Tooltips render on hover and keyboard focus",
        "selector": "[role=tooltip]",
        "condition": "expectVisible",
        "params": []
      }
    },
    {
      "id": "TC014",
      "priority": "MUST",
      "scenario": "Toast notifications types and duration",
      "steps": [
        {
          "description": "Open Forms and Feedback page via hash",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site#forms"]
        },
        {
          "description": "Click the Success toast trigger button (성공)",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Verify the Success toast (성공!) appears in the sonner toaster",
          "action": "expectVisible",
          "selector": "[data-sonner-toast]",
          "params": []
        },
        {
          "description": "Click the Error toast trigger button (오류)",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Confirm the Error occurred toast (오류 발생!) is shown",
          "action": "expectVisible",
          "selector": "[data-sonner-toast]",
          "params": []
        },
        {
          "description": "Use the Show All Toasts button (모든 토스트 보기) to trigger additional toast types",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Ensure subsequent toasts such as New update available (새로운 업데이트가 있습니다) appear",
          "action": "expectVisible",
          "selector": "[data-sonner-toast]",
          "params": []
        }
      ],
      "assertion": {
        "description": "At least four toast notifications display after triggering all buttons",
        "selector": "[data-sonner-toast]",
        "condition": "expectCountAtLeast",
        "params": [4]
      }
    },
    {
      "id": "TC027",
      "priority": "MUST",
      "scenario": "Drag-and-drop reorder within a list",
      "steps": [
        {
          "description": "Navigate to Interactions and Data page via hash",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site#interactions"]
        },
        {
          "description": "Scroll until the card titled Drag and Drop (드래그 앤 드롭) is visible",
          "action": "scrollIntoView",
          "selector": "",
          "params": []
        },
        {
          "description": "Drag the card labelled Task 1 (작업 1) to the bottom of the list after Task 4 (작업 4)",
          "action": "dragAndDrop",
          "selector": "",
          "params": [""]
        },
        {
          "description": "Verify Task 1 (작업 1) now appears last in the list ordering",
          "action": "expectTrue",
          "selector": "",
          "params": ["(() => { const section = Array.from(document.querySelectorAll('section')).find(sec => sec.textContent.includes('드래그 앤 드롭')); if (!section) return false; const cards = Array.from(section.querySelectorAll('.space-y-3 > div')); return cards.length && cards[cards.length - 1].textContent.includes('작업 1'); })()"]
        }
      ],
      "assertion": {
        "description": "Card reorder completes successfully with Task 1 at the end",
        "selector": "",
        "condition": "expectTrue",
        "params": ["(() => { const section = Array.from(document.querySelectorAll('section')).find(sec => sec.textContent.includes('드래그 앤 드롭')); if (!section) return false; const cards = Array.from(section.querySelectorAll('.space-y-3 > div')); return cards.length && cards[cards.length - 1].textContent.includes('작업 1'); })()"]
      }
    },
    {
      "id": "TC032",
      "priority": "MUST",
      "scenario": "Infinite scroll auto-loads more items",
      "steps": [
        {
          "description": "Navigate to Interactions and Data page via hash",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site#interactions"]
        },
        {
          "description": "Scroll to the card titled Infinite Scroll (무한 스크롤)",
          "action": "scrollIntoView",
          "selector": "",
          "params": []
        },
        {
          "description": "Scroll the infinite scroll list container to the bottom to trigger loading",
          "action": "evaluate",
          "selector": "",
          "params": ["const sections = Array.from(document.querySelectorAll('section')); const scrollSection = sections.find(s => s.textContent.includes('무한 스크롤')); if (scrollSection) { const container = scrollSection.querySelector('.max-h-96'); if (container) { container.scrollTo(0, container.scrollHeight); } }"]
        },
        {
          "description": "Wait for the Loading indicator (로딩 중...) inside the list to disappear",
          "action": "expectHidden",
          "selector": "text",
          "params": []
        },
        {
          "description": "Confirm that a new item labelled Item 21 (아이템 21) appears in the list",
          "action": "expectVisible",
          "selector": "div",
          "params": []
        }
      ],
      "assertion": {
        "description": "New items append once the sentinel triggers and loading finishes",
        "selector": "div",
        "condition": "expectVisible",
        "params": []
      }
    },
    {
      "id": "TC038",
      "priority": "MAY",
      "scenario": "Web Share API fallback when unsupported",
      "steps": [
        {
          "description": "Set viewport to desktop size 1280x900",
          "action": "setViewport",
          "selector": "",
          "params": [[1280, 900]]
        },
        {
          "description": "Open the base URL",
          "action": "goto",
          "selector": "",
          "params": ["https://final-blog-25638597.figma.site"]
        },
        {
          "description": "Remove navigator.share and stub navigator.clipboard.writeText to capture copied link",
          "action": "evaluate",
          "selector": "",
          "params": ["navigator.share = undefined; window.__copiedLink = null; if (!navigator.clipboard) { navigator.clipboard = {}; } navigator.clipboard.writeText = async text => { window.__copiedLink = text; };"]
        },
        {
          "description": "Click the Share button (공유하기)",
          "action": "click",
          "selector": "",
          "params": []
        },
        {
          "description": "Assert clipboard stub captured the current URL",
          "action": "expectTrue",
          "selector": "",
          "params": ["window.__copiedLink === window.location.href"]
        },
        {
          "description": "Verify success toast appears about Link copied to clipboard (링크가 클립보드에 복사되었습니다!)",
          "action": "expectVisible",
          "selector": "[data-sonner-toast]",
          "params": []
        }
      ],
      "assertion": {
        "description": "Fallback copies the URL to clipboard and shows a success toast when navigator.share is unavailable",
        "selector": "",
        "condition": "expectTrue",
        "params": ["window.__copiedLink !== null"]
      }
    }
  ]
}
